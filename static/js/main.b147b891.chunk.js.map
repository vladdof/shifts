{"version":3,"sources":["img/menu-icons.svg","components/Menu.js","components/BurgerMenu.js","img/avatar.png","components/Avatar.js","components/Header.js","components/TitleTable.js","img/table-icons.svg","service/FetchData.js","components/Table.js","components/Select.js","components/Content.js","components/Main.js","App.js","index.js"],"names":["MenuList","styled","ul","props","openMenu","icon_names","0","1","2","3","4","5","Menu","id","links","map","item","index","width","height","xlinkHref","sprite","href","Button","button","className","Burger","useState","toggleClass","type","aria-expanded","aria-controls","as","onClick","toggleMenu","setClass","Figure","figure","ImgWrap","img","Avatar","src","avatar","alt","HeaderElement","header","Header","H1","h1","Title","getDate","Date","getFullYear","TableElement","table","TheadElement","thead","TbodyElement","tbody","headers","rows","Table","row","index_row","cell","index_cell","data-label","icons","GlobalStyle","createGlobalStyle","Select","options","label","value","selected","setSelected","onChange","labelledBy","selectAllLabel","disableSearch","ContentElement","main","SelectWrapper","div","Content","TitleTable","MainElement","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b147b891.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/menu-icons.61de39c3.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport sprite from '../img/menu-icons.svg'\r\n\r\nconst MenuList = styled.ul`\r\n    display: grid;\r\n\r\n    li {\r\n        display: flex;\r\n        align-items: center;\r\n        position: relative;\r\n        cursor: pointer;\r\n\r\n        &:before {\r\n            content: '';\r\n            width: 199px;\r\n            position: absolute;\r\n            z-index: 0;\r\n            left: -12px;\r\n            top: -12px;\r\n            bottom: -12px;\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n            transition: 0.3s linear;\r\n            --size: 0;\r\n            clip-path: circle(var(--size) at left center);\r\n        }\r\n\r\n        &:hover:before {\r\n            --size: 300px;\r\n        }\r\n\r\n        * {\r\n            z-index: 1;\r\n        }\r\n    }\r\n\r\n    svg {\r\n        margin-right: 16px;\r\n    }\r\n\r\n    @media (min-width: 992.08px) {\r\n        row-gap: 30px;\r\n        padding-left: 36px;\r\n    }\r\n\r\n    @media (max-width: 992px) {\r\n        position: fixed;\r\n        right: auto;\r\n        top: 56px;\r\n        row-gap: 25px;\r\n        align-content: baseline;\r\n        justify-content: flex-start;\r\n        max-width: 300px;\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding-left: 30px;\r\n        padding-top: 117px;\r\n        background-color: #fff;\r\n        box-shadow: 0 0 16px rgb(0 0 0 / 8%);\r\n        left: ${props => !props.openMenu ? '-300px' : '0'};\r\n        visibility: ${props => !props.openMenu ? 'hidden' : 'visible'};\r\n        transition: all .3s ease;\r\n        z-index: 100;\r\n\r\n        li {\r\n            &:before {\r\n                background-color: rgb(0 0 0 / 8%);\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 568px) {\r\n        max-width: 100%;\r\n    }\r\n`;\r\n\r\nconst icon_names = {\r\n    0: '#u_create-dashboard',\r\n    1: '#u_users-alt',\r\n    2: '#u_chart',\r\n    3: '#u_clipboard-alt',\r\n    4: '#u_wrench',\r\n    5: '#u_file-search-alt'\r\n\r\n};\r\n\r\nconst Menu = (props) => (\r\n    <MenuList openMenu={props.openMenu} id='menu'>\r\n        {\r\n            props.links.map((item, index) => (\r\n                <li key={index}>\r\n                    <svg width='20' height='20'>\r\n                        <use key={index} xlinkHref={`${sprite}${icon_names[index]}`}></use>\r\n                    </svg>\r\n                    <a href='#'>{item}</a>\r\n                </li>\r\n            ))\r\n        }\r\n    </MenuList>\r\n);\r\n\r\nexport default Menu;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    margin-right: 100%;\r\n    width: 50px;\r\n    height: 50px;\r\n    background: none;\r\n    border: 0;\r\n    cursor: pointer;\r\n    z-index: 101;\r\n    position: relative;\r\n\r\n    @media (min-width: 992px) {\r\n        display: none;\r\n    }\r\n\r\n    span {\r\n        display: block;\r\n        width: 20px;\r\n        height: 3px;\r\n        margin: auto;\r\n        background-color: #fff;\r\n        border-radius: 1px;\r\n        outline: 1px solid transparent;\r\n        position: relative;\r\n        user-select: none;\r\n        transition-property: background-color, transform;\r\n        transition-duration: .2s;\r\n\r\n        &:before,\r\n        &:after {\r\n            content: '';\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #fff;\r\n            border-radius: 1px;\r\n            position: absolute;\r\n            left: 0;\r\n            z-index: 1;\r\n            transition-property: background-color, transform;\r\n            transition-duration: .2s;\r\n        }\r\n\r\n        &:before {\r\n            top: -8px;\r\n        }\r\n\r\n        &:after {\r\n            bottom: -8px;\r\n        }\r\n\r\n        ${props => props.className !== 'clicked' ? 'clicked' : ''} {\r\n            background-color: transparent;\r\n        }\r\n    }\r\n\r\n    ${props => props.className !== 'clicked' ? 'clicked' : ''} span:before {\r\n        transform: translateY(8px) rotate(45deg);\r\n    }\r\n\r\n    ${props => props.className !== 'clicked' ? 'clicked' : ''} span:after {\r\n        transform: translateY(-8px) rotate(-45deg);\r\n    }\r\n`;\r\n\r\nconst Burger = (props) => {\r\n    const [className, toggleClass] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        toggleClass(!className);\r\n        props.toggleMenu();\r\n    }\r\n\r\n    const setClass = () => {\r\n        if (className === true) {\r\n            return 'clicked';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            type='button'\r\n            aria-expanded={props.openMenu}\r\n            aria-controls='nemu'\r\n            as='button'\r\n            onClick={() => handleClick()}\r\n            className={setClass()}\r\n        >\r\n            <span></span>\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default Burger;\r\n","export default __webpack_public_path__ + \"static/media/avatar.0c487277.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport avatar from '../img/avatar.png'\r\n\r\nconst Figure = styled.figure`\r\n    display: grid;\r\n    grid-template-columns: min-content 70px;\r\n    align-content: center;\r\n    justify-content: start;\r\n\r\n    figcaption {\r\n        align-self: center;\r\n        text-align: left;\r\n    }\r\n\r\n    @media (min-width: 992.08px) {\r\n        margin-left: 36px;\r\n        margin-top: auto;\r\n        margin-bottom: 42px;\r\n    }\r\n\r\n    @media (max-width: 992px) {\r\n        position: fixed;\r\n        top: calc(56px + 30px);\r\n        left: ${props => !props.openMenu ? '-300px' : '0'};\r\n        z-index: 100;\r\n        margin-left: 30px;\r\n        transition: all .3s ease;\r\n        visibility: ${props => !props.openMenu ? 'hidden' : 'visible'};\r\n    }\r\n`;\r\n\r\nconst ImgWrap = styled.img`\r\n    margin-right: 15px;\r\n`;\r\n\r\nconst Avatar = (props) => (\r\n    <Figure openMenu={props.openMenu}>\r\n        <ImgWrap src={avatar} width='50' height='50' alt='Darlene Robertson' />\r\n        <figcaption>Darlene Robertson</figcaption>\r\n    </Figure>\r\n);\r\n\r\nexport default Avatar;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Menu from './Menu';\r\nimport Burger from './BurgerMenu';\r\nimport Avatar from './Avatar';\r\n\r\nconst HeaderElement = styled.header`\r\n    grid-area: menu;\r\n    position: fixed;\r\n    z-index: 100;\r\n\r\n    @media (min-width: 992.08px) {\r\n        min-height: 100vh;\r\n        padding: 45px 0 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: var(--nav-bar-width);\r\n        background-color: #e8eaf0;\r\n        box-shadow: 0 0 16px rgba(0,0,0,.08);\r\n        overflow: visible;\r\n    }\r\n\r\n    @media (max-width: 992px) {\r\n        width: 100%;\r\n        padding: 3px 0;\r\n        top: 0;\r\n        left: 0;\r\n        background-color: #1d1e22;\r\n        overflow: hidden;\r\n    }\r\n`;\r\n\r\nconst links = [\r\n    'My Dashboard',\r\n    'People',\r\n    'Operations',\r\n    'Schedule Planning',\r\n    'Administration',\r\n    'Action Tracking'\r\n];\r\n\r\nconst Header = () => {\r\n    const [openMenu, toggleMenu] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <HeaderElement>\r\n                <div as=\"button\">\r\n                    <span className=\"icon\">\r\n                    </span>\r\n                </div>\r\n\r\n                <nav>\r\n                    <Burger openMenu={openMenu} toggleMenu={() => toggleMenu(!openMenu)} />\r\n                    <Menu openMenu={openMenu} links={links} />\r\n                </nav>\r\n\r\n                <Avatar openMenu={openMenu} />\r\n            </HeaderElement>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst H1 = styled.h1`\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n\r\n    span {\r\n        color: #058373;\r\n    }\r\n\r\n    @media (max-width: 767.98px) {\r\n        max-width: 204px;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        margin-bottom: 6px;\r\n        font-size: 40px;\r\n        line-height: 48px;\r\n    }\r\n`;\r\n\r\nconst Title = () => (\r\n    <H1>All Shifts for <span>January 2021</span></H1>\r\n);\r\n\r\nexport default Title;\r\n","export default __webpack_public_path__ + \"static/media/table-icons.aa6f579f.svg\";","const getHeadersTable = () => ['Date', 'Shift type', 'Period', 'Hours', 'Salary (gross)', 'Bonus (gross)'];\r\n\r\nconst getRowsTable = () => [\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n    ['January 06, 2021', 'Afternoon', '15:00 - 23:00', '8h', '$1,630', '30'],\r\n];\r\n\r\nconst getDate = () => {\r\n    return new Date().getFullYear();\r\n};\r\n\r\nconst getMonthsYear = () => [\r\n    { label: `January, ${getDate()}`, value: `january` },\r\n    { label: `February, ${getDate()}`, value: `february` },\r\n    { label: `March, ${getDate()}`, value: `march` },\r\n    { label: `April, ${getDate()}`, value: `april` },\r\n    { label: `May, ${getDate()}`, value: `may` },\r\n    { label: `June, ${getDate()}`, value: `june` },\r\n    { label: `July, ${getDate()}`, value: `july` },\r\n    { label: `August, ${getDate()}`, value: `august` },\r\n    { label: `September, ${getDate()}`, value: `september` },\r\n    { label: `October, ${getDate()}`, value: `october` },\r\n    { label: `November, ${getDate()}`, value: `november` },\r\n    { label: `December, ${getDate()}`, value: `december` }\r\n];\r\n\r\nexport { getMonthsYear, getHeadersTable, getRowsTable };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport icons from '../img/table-icons.svg';\r\nimport { getHeadersTable, getRowsTable } from '../service/FetchData';\r\n\r\nconst TableElement = styled.table`\r\n    border-spacing: 10px;\r\n    text-align: left;\r\n    max-width: var(--max-width, 1096px);\r\n\r\n    @media (min-width: 768px) {\r\n        border-collapse: separate;\r\n    }\r\n`;\r\n\r\nconst TheadElement = styled.thead`\r\n    @media (min-width: 768px) {\r\n        color: #8697a8;\r\n        font-weight: 500;\r\n        font-size: 10px;\r\n        line-height: 12px;\r\n        letter-spacing: 0.03em;\r\n        text-transform: uppercase;\r\n\r\n        th {\r\n            &:first-child {\r\n                padding-left: 10px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        width: 1px;\r\n        height: 1px;\r\n        padding: 0;\r\n        position: absolute;\r\n        overflow: hidden;\r\n    }\r\n`;\r\n\r\nconst TbodyElement = styled.tbody`\r\n    tr {\r\n        box-sizing: border-box;\r\n        box-shadow: 0 0 1px rgba(12, 20, 39, 0.1), 0 2px 2px rgba(12, 20, 39, 0.1);\r\n        border-radius: 20px;\r\n        transition: box-shadow 0.2s ease;\r\n\r\n        &:hover {\r\n            box-shadow: 0px 2px 28px rgba(12, 20, 39, 0.10);\r\n        }\r\n\r\n        @media (max-width: 767.97px) {\r\n            display: block;\r\n\r\n            &:not(:last-child) {\r\n                margin-bottom: 16px;\r\n            }\r\n        }\r\n    }\r\n\r\n    td {\r\n        padding: 20px 0;\r\n\r\n        @media (min-width: 768px) {\r\n            &:first-child {\r\n                padding-left: 10px;\r\n            }\r\n\r\n            span {\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n\r\n            svg {\r\n                display: block;\r\n                margin-right: 8px;\r\n            }\r\n        }\r\n\r\n        @media (max-width: 767.97px) {\r\n            display: block;\r\n            padding: 7.5px 15px;\r\n            text-align: right;\r\n\r\n            &:first-child {\r\n                padding-top: 15px;\r\n            }\r\n\r\n            &:last-child {\r\n                padding-bottom: 15px;\r\n            }\r\n\r\n            &:before {\r\n                content: attr(data-label);\r\n                float: left;\r\n                font-weight: 500;\r\n                font-size: 10px;\r\n                line-height: 18px;\r\n                letter-spacing: 0.03em;\r\n                text-transform: uppercase;\r\n                color: #8697a8;\r\n            }\r\n\r\n            span {\r\n                font-size: 14px;\r\n                line-height: 17px;\r\n            }\r\n\r\n            svg {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst headers = getHeadersTable();\r\nconst rows = getRowsTable();\r\n\r\nconst setDataLabel = (index) => headers[index];\r\n\r\nconst Table = () => (\r\n    <TableElement>\r\n        <TheadElement>\r\n            <tr>\r\n                {\r\n                    headers.map((header, index) => (\r\n                        <th key={index}>{header}</th>\r\n                    ))\r\n                }\r\n            </tr>\r\n        </TheadElement>\r\n        <TbodyElement>\r\n            {rows.map((row, index_row) => (\r\n                <tr key={index_row}>\r\n                    {row.map((cell, index_cell) =>\r\n                        <td key={index_cell} data-label={setDataLabel(index_cell)}>\r\n                            <span>\r\n                                {\r\n                                    (index_cell === 0 &&\r\n                                        <svg width='20' height='20'>\r\n                                            <use xlinkHref={`${icons}#u_user-check`}></use>\r\n                                        </svg>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    (index_cell === 2 &&\r\n                                        <svg width='18' height='18'>\r\n                                            <use xlinkHref={`${icons}#fi_clock`}></use>\r\n                                        </svg>\r\n                                    )\r\n                                }\r\n                                {cell}\r\n                            </span>\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            ))}\r\n        </TbodyElement>\r\n    </TableElement>\r\n);\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport  { getMonthsYear } from '../service/FetchData';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    .multi-select {\r\n        width: 100%;\r\n\r\n        @media (min-width: 768px) {\r\n            max-width: 165px;\r\n        }\r\n\r\n        @media (max-width: 767.98px) {\r\n            max-width: 136px;\r\n        }\r\n    }\r\n\r\n    .rmsc {\r\n        --rmsc-border: #dedfe2;\r\n        --rmsc-radius: 6px;\r\n        --rmsc-h: 42px;\r\n    }\r\n`;\r\n\r\nconst Select = () => {\r\n    const options = getMonthsYear();\r\n\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    return (\r\n        <>\r\n        <GlobalStyle />\r\n        <MultiSelect\r\n            options={options}\r\n            value={selected}\r\n            onChange={setSelected}\r\n            labelledBy={'Select'}\r\n            selectAllLabel={'All dates'}\r\n            disableSearch\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport TitleTable from './TitleTable';\r\nimport Table from './Table';\r\nimport Select from './Select';\r\n\r\nconst ContentElement = styled.main`\r\n    display: grid;\r\n    grid-area: content;\r\n    min-height: 100vh;\r\n    padding: 70px 15px 10px;\r\n    position: relative;\r\n    text-align: left;\r\n    background-color: var(--post-bg);\r\n    transition: var(--transition-all);\r\n\r\n    @media (min-width: 768px) {\r\n        gap: 20px;\r\n        padding: 80px 30px 10px;\r\n    }\r\n\r\n    @media (min-width: 992px) {\r\n        padding: 120px 60px 10px;\r\n    }\r\n\r\n    @media (max-width: 767.98px) {\r\n        gap: 15px;\r\n    }\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n    display: flex;\r\n\r\n    @media (max-width: 767.98px) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        max-width: var(--max-width);\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst Content = () => (\r\n    <ContentElement>\r\n        <SelectWrapper>\r\n            <TitleTable />\r\n            <Select />\r\n        </SelectWrapper>\r\n        <Table />\r\n    </ContentElement>\r\n);\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from './Header';\r\nimport Content from './Content';\r\n\r\nconst MainElement = styled.div`\r\n    margin: 0px auto;\r\n    z-index: 10;\r\n    display: grid;\r\n\r\n    grid-template-areas: 'content menu';\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: calc(100% - var(--nav-bar-width)) var(--nav-bar-width);\r\n\r\n    @media (min-width: 992px) {\r\n        grid-template-areas: 'menu content';\r\n        grid-template-columns: var(--nav-bar-width) calc( 100vw - var(--nav-bar-width) );\r\n        grid-template-rows: 100%;\r\n    }\r\n`;\r\n\r\nconst Main = (props) => (\r\n    <MainElement className={ props.className }>\r\n        <Header />\r\n        <Content />\r\n    </MainElement>\r\n);\r\n\r\nexport default Main;\r\n","import Main from './components/Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Main className=\"App\" />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}